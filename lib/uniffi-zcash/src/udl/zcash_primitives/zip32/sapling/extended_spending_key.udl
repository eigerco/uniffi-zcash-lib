interface ZcashExtendedSpendingKey {
  [Name=master]
  constructor(sequence<u8> data);

  [Name=from_bytes, Throws=ZcashError]
  constructor(sequence<u8> data);

  [Name=from_path]
  constructor([ByRef] ZcashExtendedSpendingKey master, sequence<ZcashChildIndex> path);

  sequence<u8> to_bytes();

  ZcashExtendedSpendingKey derive_child(ZcashChildIndex index);

  ZcashDefaultAddressResult default_address();

  ZcashExtendedSpendingKey derive_internal();

  ZcashDiversifiableFullViewingKey to_diversifiable_full_viewing_key();

};

/* We cannot return tuples, so this pseudo type is used*/
dictionary ZcashDefaultAddressResult {
  ZcashDiversifierIndex diversifier_index;
  ZcashPaymentAddress address;
};